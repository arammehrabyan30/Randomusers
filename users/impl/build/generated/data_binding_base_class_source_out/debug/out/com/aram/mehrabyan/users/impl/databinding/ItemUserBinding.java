// Generated by view binder compiler. Do not edit!
package com.aram.mehrabyan.users.impl.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aram.mehrabyan.users.impl.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView iconBookmark;

  @NonNull
  public final AppCompatImageView imageUser;

  @NonNull
  public final AppCompatTextView tvSubTitle;

  @NonNull
  public final AppCompatTextView tvTitle;

  private ItemUserBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView iconBookmark, @NonNull AppCompatImageView imageUser,
      @NonNull AppCompatTextView tvSubTitle, @NonNull AppCompatTextView tvTitle) {
    this.rootView = rootView;
    this.iconBookmark = iconBookmark;
    this.imageUser = imageUser;
    this.tvSubTitle = tvSubTitle;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.icon_bookmark;
      AppCompatImageView iconBookmark = ViewBindings.findChildViewById(rootView, id);
      if (iconBookmark == null) {
        break missingId;
      }

      id = R.id.image_user;
      AppCompatImageView imageUser = ViewBindings.findChildViewById(rootView, id);
      if (imageUser == null) {
        break missingId;
      }

      id = R.id.tv_sub_title;
      AppCompatTextView tvSubTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvSubTitle == null) {
        break missingId;
      }

      id = R.id.tv_title;
      AppCompatTextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ItemUserBinding((ConstraintLayout) rootView, iconBookmark, imageUser, tvSubTitle,
          tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
